apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    //测试相关库
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //library-res缓解base的压力，存放一些静态资源
    api project(':library_res')
    //support相关库
    api rootProject.ext.support["design"]
    api rootProject.ext.support["appcompat_v7"]
    //MVVMHabit框架
    api rootProject.ext.dependencies["MVVMHabit"]
    //ARouter框架
    api rootProject.ext.dependencies["arouter_api"]
    //其他公共库，例如图片选择、分享、推送等
}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion rootProject.ext.versions["support_version"]
            }
        }
    }
}
